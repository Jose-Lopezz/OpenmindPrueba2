{"ast":null,"code":"import { signal, computed } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class CoursesService {\n  constructor() {\n    this.coursesSignal = signal([{\n      id: '1',\n      title: 'Introducción a React',\n      description: 'Aprende los fundamentos de React desde cero',\n      instructor: 'Ana Rodríguez',\n      instructorId: '1',\n      duration: '8 semanas',\n      level: 'Principiante',\n      category: 'Programación',\n      enrolledStudents: ['2'],\n      createdAt: new Date('2024-01-15')\n    }, {\n      id: '2',\n      title: 'Diseño UX/UI Avanzado',\n      description: 'Domina las técnicas avanzadas de diseño de experiencia de usuario',\n      instructor: 'Carlos López',\n      instructorId: '2',\n      duration: '10 semanas',\n      level: 'Avanzado',\n      category: 'Diseño',\n      enrolledStudents: ['1'],\n      createdAt: new Date('2024-02-01')\n    }, {\n      id: '3',\n      title: 'Marketing Digital',\n      description: 'Estrategias efectivas de marketing en el mundo digital',\n      instructor: 'Laura Martín',\n      instructorId: '3',\n      duration: '6 semanas',\n      level: 'Intermedio',\n      category: 'Marketing',\n      enrolledStudents: [],\n      createdAt: new Date('2024-02-10')\n    }]);\n    this.enrolledCourses = computed(() => {\n      return this.coursesSignal().filter(course => course.enrolledStudents.includes('1') // Mock current user ID\n      );\n    });\n    this.createdCourses = computed(() => {\n      return this.coursesSignal().filter(course => course.instructorId === '1' // Mock current user ID\n      );\n    });\n  }\n  get courses() {\n    return this.coursesSignal.asReadonly();\n  }\n  createCourse(newCourse) {\n    const course = {\n      ...newCourse,\n      id: Math.random().toString(36).substr(2, 9),\n      enrolledStudents: [],\n      createdAt: new Date()\n    };\n    this.coursesSignal.update(courses => [...courses, course]);\n  }\n  enrollInCourse(courseId, userId) {\n    this.coursesSignal.update(courses => courses.map(course => course.id === courseId ? {\n      ...course,\n      enrolledStudents: [...course.enrolledStudents, userId]\n    } : course));\n  }\n  getCourseById(id) {\n    return this.coursesSignal().find(course => course.id === id);\n  }\n  searchCourses(query) {\n    return this.coursesSignal().filter(course => course.title.toLowerCase().includes(query.toLowerCase()) || course.description.toLowerCase().includes(query.toLowerCase()) || course.instructor.toLowerCase().includes(query.toLowerCase()));\n  }\n  filterCoursesByCategory(category) {\n    return this.coursesSignal().filter(course => course.category === category);\n  }\n  static #_ = this.ɵfac = function CoursesService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CoursesService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CoursesService,\n    factory: CoursesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["signal","computed","CoursesService","constructor","coursesSignal","id","title","description","instructor","instructorId","duration","level","category","enrolledStudents","createdAt","Date","enrolledCourses","filter","course","includes","createdCourses","courses","asReadonly","createCourse","newCourse","Math","random","toString","substr","update","enrollInCourse","courseId","userId","map","getCourseById","find","searchCourses","query","toLowerCase","filterCoursesByCategory","_","_2","factory","ɵfac","providedIn"],"sources":["/home/project/src/app/services/courses.service.ts"],"sourcesContent":["import { Injectable, signal, computed } from '@angular/core';\nimport { Course } from '../models/course.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoursesService {\n  private coursesSignal = signal<Course[]>([\n    {\n      id: '1',\n      title: 'Introducción a React',\n      description: 'Aprende los fundamentos de React desde cero',\n      instructor: 'Ana Rodríguez',\n      instructorId: '1',\n      duration: '8 semanas',\n      level: 'Principiante',\n      category: 'Programación',\n      enrolledStudents: ['2'],\n      createdAt: new Date('2024-01-15')\n    },\n    {\n      id: '2',\n      title: 'Diseño UX/UI Avanzado',\n      description: 'Domina las técnicas avanzadas de diseño de experiencia de usuario',\n      instructor: 'Carlos López',\n      instructorId: '2',\n      duration: '10 semanas',\n      level: 'Avanzado',\n      category: 'Diseño',\n      enrolledStudents: ['1'],\n      createdAt: new Date('2024-02-01')\n    },\n    {\n      id: '3',\n      title: 'Marketing Digital',\n      description: 'Estrategias efectivas de marketing en el mundo digital',\n      instructor: 'Laura Martín',\n      instructorId: '3',\n      duration: '6 semanas',\n      level: 'Intermedio',\n      category: 'Marketing',\n      enrolledStudents: [],\n      createdAt: new Date('2024-02-10')\n    }\n  ]);\n\n  get courses() {\n    return this.coursesSignal.asReadonly();\n  }\n\n  enrolledCourses = computed(() => {\n    return this.coursesSignal().filter(course => \n      course.enrolledStudents.includes('1') // Mock current user ID\n    );\n  });\n\n  createdCourses = computed(() => {\n    return this.coursesSignal().filter(course => \n      course.instructorId === '1' // Mock current user ID\n    );\n  });\n\n  createCourse(newCourse: Omit<Course, 'id' | 'enrolledStudents' | 'createdAt'>): void {\n    const course: Course = {\n      ...newCourse,\n      id: Math.random().toString(36).substr(2, 9),\n      enrolledStudents: [],\n      createdAt: new Date()\n    };\n    \n    this.coursesSignal.update(courses => [...courses, course]);\n  }\n\n  enrollInCourse(courseId: string, userId: string): void {\n    this.coursesSignal.update(courses => \n      courses.map(course => \n        course.id === courseId \n          ? { ...course, enrolledStudents: [...course.enrolledStudents, userId] }\n          : course\n      )\n    );\n  }\n\n  getCourseById(id: string): Course | undefined {\n    return this.coursesSignal().find(course => course.id === id);\n  }\n\n  searchCourses(query: string): Course[] {\n    return this.coursesSignal().filter(course => \n      course.title.toLowerCase().includes(query.toLowerCase()) ||\n      course.description.toLowerCase().includes(query.toLowerCase()) ||\n      course.instructor.toLowerCase().includes(query.toLowerCase())\n    );\n  }\n\n  filterCoursesByCategory(category: string): Course[] {\n    return this.coursesSignal().filter(course => course.category === category);\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}