{"ast":null,"code":"import { EventEmitter, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/button\";\nfunction RegisterFormComponent_Conditional_12_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" El nombre es requerido \");\n  }\n}\nfunction RegisterFormComponent_Conditional_12_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" El nombre debe tener al menos 2 caracteres \");\n  }\n}\nfunction RegisterFormComponent_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵconditionalCreate(1, RegisterFormComponent_Conditional_12_Conditional_1_Template, 1, 0);\n    i0.ɵɵconditionalCreate(2, RegisterFormComponent_Conditional_12_Conditional_2_Template, 1, 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    let tmp_2_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(((tmp_1_0 = ctx_r0.registerForm.get(\"name\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]) ? 1 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(((tmp_2_0 = ctx_r0.registerForm.get(\"name\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"minlength\"]) ? 2 : -1);\n  }\n}\nfunction RegisterFormComponent_Conditional_17_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" El email es requerido \");\n  }\n}\nfunction RegisterFormComponent_Conditional_17_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" Email inv\\u00E1lido \");\n  }\n}\nfunction RegisterFormComponent_Conditional_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵconditionalCreate(1, RegisterFormComponent_Conditional_17_Conditional_1_Template, 1, 0);\n    i0.ɵɵconditionalCreate(2, RegisterFormComponent_Conditional_17_Conditional_2_Template, 1, 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    let tmp_2_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(((tmp_1_0 = ctx_r0.registerForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]) ? 1 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(((tmp_2_0 = ctx_r0.registerForm.get(\"email\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"email\"]) ? 2 : -1);\n  }\n}\nfunction RegisterFormComponent_Conditional_22_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" La contrase\\u00F1a es requerida \");\n  }\n}\nfunction RegisterFormComponent_Conditional_22_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" La contrase\\u00F1a debe tener al menos 6 caracteres \");\n  }\n}\nfunction RegisterFormComponent_Conditional_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵconditionalCreate(1, RegisterFormComponent_Conditional_22_Conditional_1_Template, 1, 0);\n    i0.ɵɵconditionalCreate(2, RegisterFormComponent_Conditional_22_Conditional_2_Template, 1, 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    let tmp_2_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(((tmp_1_0 = ctx_r0.registerForm.get(\"password\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]) ? 1 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(((tmp_2_0 = ctx_r0.registerForm.get(\"password\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"minlength\"]) ? 2 : -1);\n  }\n}\nfunction RegisterFormComponent_Conditional_27_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" Confirma tu contrase\\u00F1a \");\n  }\n}\nfunction RegisterFormComponent_Conditional_27_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" Las contrase\\u00F1as no coinciden \");\n  }\n}\nfunction RegisterFormComponent_Conditional_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵconditionalCreate(1, RegisterFormComponent_Conditional_27_Conditional_1_Template, 1, 0);\n    i0.ɵɵconditionalCreate(2, RegisterFormComponent_Conditional_27_Conditional_2_Template, 1, 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    let tmp_2_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(((tmp_1_0 = ctx_r0.registerForm.get(\"confirmPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]) ? 1 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(((tmp_2_0 = ctx_r0.registerForm.get(\"confirmPassword\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"passwordMismatch\"]) ? 2 : -1);\n  }\n}\nexport class RegisterFormComponent {\n  constructor(fb, authService, router, snackBar) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.switchToLogin = new EventEmitter();\n    this.isLoading = signal(false);\n    this.registerForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]]\n    }, {\n      validators: this.passwordMatchValidator\n    });\n  }\n  passwordMatchValidator(control) {\n    const password = control.get('password');\n    const confirmPassword = control.get('confirmPassword');\n    if (password && confirmPassword && password.value !== confirmPassword.value) {\n      confirmPassword.setErrors({\n        passwordMismatch: true\n      });\n      return {\n        passwordMismatch: true\n      };\n    }\n    return null;\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.isLoading.set(true);\n      const {\n        name,\n        email,\n        password\n      } = this.registerForm.value;\n      this.authService.register(name, email, password).subscribe({\n        next: success => {\n          this.isLoading.set(false);\n          if (success) {\n            this.snackBar.open('¡Registro exitoso! Tu cuenta ha sido creada correctamente.', 'Cerrar', {\n              duration: 3000,\n              panelClass: ['success-snackbar']\n            });\n            this.router.navigate(['/dashboard']);\n          } else {\n            this.snackBar.open('Ha ocurrido un error al crear la cuenta.', 'Cerrar', {\n              duration: 3000,\n              panelClass: ['error-snackbar']\n            });\n          }\n        },\n        error: () => {\n          this.isLoading.set(false);\n          this.snackBar.open('Ha ocurrido un error al registrarse.', 'Cerrar', {\n            duration: 3000,\n            panelClass: ['error-snackbar']\n          });\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function RegisterFormComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || RegisterFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterFormComponent,\n    selectors: [[\"app-register-form\"]],\n    outputs: {\n      switchToLogin: \"switchToLogin\"\n    },\n    decls: 35,\n    vars: 7,\n    consts: [[1, \"blue-theme\"], [1, \"text-center\", \"mb-4\"], [2, \"color\", \"#1976d2\", \"font-size\", \"24px\", \"font-weight\", \"bold\"], [2, \"color\", \"#666\", \"text-align\", \"center\"], [1, \"flex\", \"flex-column\", \"gap-4\", 3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Tu nombre completo\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"tu@email.com\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"confirmPassword\", \"placeholder\", \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"full-width\", 3, \"disabled\"], [1, \"text-center\", \"mt-4\"], [2, \"color\", \"#666\", \"font-size\", \"14px\"], [\"mat-button\", \"\", \"color\", \"primary\", 2, \"text-decoration\", \"none\", \"font-weight\", \"500\", 3, \"click\"]],\n    template: function RegisterFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-header\", 1)(2, \"mat-card-title\", 2);\n        i0.ɵɵtext(3, \" Crear Cuenta \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-subtitle\", 3);\n        i0.ɵɵtext(5, \" \\u00DAnete a nuestra plataforma de cursos \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterFormComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"mat-form-field\", 5)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Nombre completo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵconditionalCreate(12, RegisterFormComponent_Conditional_12_Template, 3, 2, \"mat-error\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 5)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 7);\n        i0.ɵɵconditionalCreate(17, RegisterFormComponent_Conditional_17_Template, 3, 2, \"mat-error\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-form-field\", 5)(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 8);\n        i0.ɵɵconditionalCreate(22, RegisterFormComponent_Conditional_22_Template, 3, 2, \"mat-error\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"mat-form-field\", 5)(24, \"mat-label\");\n        i0.ɵɵtext(25, \"Confirmar contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 9);\n        i0.ɵɵconditionalCreate(27, RegisterFormComponent_Conditional_27_Template, 3, 2, \"mat-error\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"button\", 10);\n        i0.ɵɵtext(29);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 11)(31, \"p\", 12);\n        i0.ɵɵtext(32, \" \\u00BFYa tienes cuenta? \");\n        i0.ɵɵelementStart(33, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function RegisterFormComponent_Template_button_click_33_listener() {\n          return ctx.switchToLogin.emit();\n        });\n        i0.ɵɵtext(34, \" Inicia sesi\\u00F3n aqu\\u00ED \");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵconditional(((tmp_1_0 = ctx.registerForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.registerForm.get(\"name\")) == null ? null : tmp_1_0.touched) ? 12 : -1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵconditional(((tmp_2_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_2_0.touched) ? 17 : -1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵconditional(((tmp_3_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_3_0.touched) ? 22 : -1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵconditional(((tmp_4_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_4_0.touched) ? 27 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.isLoading() || ctx.registerForm.invalid);\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate1(\" \", ctx.isLoading() ? \"Creando cuenta...\" : \"Crear Cuenta\", \" \");\n      }\n    },\n    dependencies: [CommonModule, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatCardModule, i5.MatCard, i5.MatCardContent, i5.MatCardHeader, i5.MatCardSubtitle, i5.MatCardTitle, MatFormFieldModule, i6.MatFormField, i6.MatLabel, i6.MatError, MatInputModule, i7.MatInput, MatButtonModule, i8.MatButton, MatSnackBarModule],\n    styles: [\"mat-card[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: 0 auto;\\n}\\n\\nmat-card-header[_ngcontent-%COMP%] {\\n  justify-content: center;\\n  padding-bottom: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYXV0aC9yZWdpc3Rlci1mb3JtL3JlZ2lzdGVyLWZvcm0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0UsZ0JBQUE7RUFDQSxjQUFBO0FBQU47O0FBR0k7RUFDRSx1QkFBQTtFQUNBLG9CQUFBO0FBQU4iLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICBtYXQtY2FyZCB7XG4gICAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgfVxuICAgIFxuICAgIG1hdC1jYXJkLWhlYWRlciB7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxNnB4O1xuICAgIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","signal","CommonModule","Validators","ReactiveFormsModule","MatCardModule","MatFormFieldModule","MatInputModule","MatButtonModule","MatSnackBarModule","i0","ɵɵtext","ɵɵelementStart","ɵɵconditionalCreate","RegisterFormComponent_Conditional_12_Conditional_1_Template","RegisterFormComponent_Conditional_12_Conditional_2_Template","ɵɵelementEnd","ɵɵadvance","ɵɵconditional","tmp_1_0","ctx_r0","registerForm","get","errors","tmp_2_0","RegisterFormComponent_Conditional_17_Conditional_1_Template","RegisterFormComponent_Conditional_17_Conditional_2_Template","RegisterFormComponent_Conditional_22_Conditional_1_Template","RegisterFormComponent_Conditional_22_Conditional_2_Template","RegisterFormComponent_Conditional_27_Conditional_1_Template","RegisterFormComponent_Conditional_27_Conditional_2_Template","RegisterFormComponent","constructor","fb","authService","router","snackBar","switchToLogin","isLoading","group","name","required","minLength","email","password","confirmPassword","validators","passwordMatchValidator","control","value","setErrors","passwordMismatch","onSubmit","valid","set","register","subscribe","next","success","open","duration","panelClass","navigate","error","_","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","i4","MatSnackBar","_2","selectors","outputs","decls","vars","consts","template","RegisterFormComponent_Template","rf","ctx","ɵɵlistener","RegisterFormComponent_Template_form_ngSubmit_7_listener","ɵɵelement","RegisterFormComponent_Conditional_12_Template","RegisterFormComponent_Conditional_17_Template","RegisterFormComponent_Conditional_22_Template","RegisterFormComponent_Conditional_27_Template","RegisterFormComponent_Template_button_click_33_listener","emit","ɵɵproperty","invalid","touched","tmp_3_0","tmp_4_0","ɵɵtextInterpolate1","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i5","MatCard","MatCardContent","MatCardHeader","MatCardSubtitle","MatCardTitle","i6","MatFormField","MatLabel","MatError","i7","MatInput","i8","MatButton","styles"],"sources":["/home/project/src/app/pages/auth/register-form/register-form.component.ts"],"sourcesContent":["import { Component, EventEmitter, Output, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, AbstractControl } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-register-form',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSnackBarModule\n  ],\n  template: `\n    <mat-card class=\"blue-theme\">\n      <mat-card-header class=\"text-center mb-4\">\n        <mat-card-title style=\"color: #1976d2; font-size: 24px; font-weight: bold;\">\n          Crear Cuenta\n        </mat-card-title>\n        <mat-card-subtitle style=\"color: #666; text-align: center;\">\n          Únete a nuestra plataforma de cursos\n        </mat-card-subtitle>\n      </mat-card-header>\n      \n      <mat-card-content>\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" class=\"flex flex-column gap-4\">\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Nombre completo</mat-label>\n            <input matInput type=\"text\" formControlName=\"name\" placeholder=\"Tu nombre completo\">\n            @if (registerForm.get('name')?.invalid && registerForm.get('name')?.touched) {\n              <mat-error>\n                @if (registerForm.get('name')?.errors?.['required']) {\n                  El nombre es requerido\n                }\n                @if (registerForm.get('name')?.errors?.['minlength']) {\n                  El nombre debe tener al menos 2 caracteres\n                }\n              </mat-error>\n            }\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Email</mat-label>\n            <input matInput type=\"email\" formControlName=\"email\" placeholder=\"tu@email.com\">\n            @if (registerForm.get('email')?.invalid && registerForm.get('email')?.touched) {\n              <mat-error>\n                @if (registerForm.get('email')?.errors?.['required']) {\n                  El email es requerido\n                }\n                @if (registerForm.get('email')?.errors?.['email']) {\n                  Email inválido\n                }\n              </mat-error>\n            }\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Contraseña</mat-label>\n            <input matInput type=\"password\" formControlName=\"password\" placeholder=\"••••••••\">\n            @if (registerForm.get('password')?.invalid && registerForm.get('password')?.touched) {\n              <mat-error>\n                @if (registerForm.get('password')?.errors?.['required']) {\n                  La contraseña es requerida\n                }\n                @if (registerForm.get('password')?.errors?.['minlength']) {\n                  La contraseña debe tener al menos 6 caracteres\n                }\n              </mat-error>\n            }\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Confirmar contraseña</mat-label>\n            <input matInput type=\"password\" formControlName=\"confirmPassword\" placeholder=\"••••••••\">\n            @if (registerForm.get('confirmPassword')?.invalid && registerForm.get('confirmPassword')?.touched) {\n              <mat-error>\n                @if (registerForm.get('confirmPassword')?.errors?.['required']) {\n                  Confirma tu contraseña\n                }\n                @if (registerForm.get('confirmPassword')?.errors?.['passwordMismatch']) {\n                  Las contraseñas no coinciden\n                }\n              </mat-error>\n            }\n          </mat-form-field>\n\n          <button \n            mat-raised-button \n            color=\"primary\" \n            type=\"submit\" \n            class=\"full-width\"\n            [disabled]=\"isLoading() || registerForm.invalid\"\n          >\n            {{ isLoading() ? 'Creando cuenta...' : 'Crear Cuenta' }}\n          </button>\n        </form>\n\n        <div class=\"text-center mt-4\">\n          <p style=\"color: #666; font-size: 14px;\">\n            ¿Ya tienes cuenta?\n            <button \n              mat-button \n              color=\"primary\" \n              (click)=\"switchToLogin.emit()\"\n              style=\"text-decoration: none; font-weight: 500;\"\n            >\n              Inicia sesión aquí\n            </button>\n          </p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  `,\n  styles: [`\n    mat-card {\n      max-width: 400px;\n      margin: 0 auto;\n    }\n    \n    mat-card-header {\n      justify-content: center;\n      padding-bottom: 16px;\n    }\n  `]\n})\nexport class RegisterFormComponent {\n  @Output() switchToLogin = new EventEmitter<void>();\n  \n  registerForm: FormGroup;\n  isLoading = signal(false);\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {\n    this.registerForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  passwordMatchValidator(control: AbstractControl) {\n    const password = control.get('password');\n    const confirmPassword = control.get('confirmPassword');\n    \n    if (password && confirmPassword && password.value !== confirmPassword.value) {\n      confirmPassword.setErrors({ passwordMismatch: true });\n      return { passwordMismatch: true };\n    }\n    \n    return null;\n  }\n\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.isLoading.set(true);\n      const { name, email, password } = this.registerForm.value;\n      \n      this.authService.register(name, email, password).subscribe({\n        next: (success) => {\n          this.isLoading.set(false);\n          if (success) {\n            this.snackBar.open('¡Registro exitoso! Tu cuenta ha sido creada correctamente.', 'Cerrar', {\n              duration: 3000,\n              panelClass: ['success-snackbar']\n            });\n            this.router.navigate(['/dashboard']);\n          } else {\n            this.snackBar.open('Ha ocurrido un error al crear la cuenta.', 'Cerrar', {\n              duration: 3000,\n              panelClass: ['error-snackbar']\n            });\n          }\n        },\n        error: () => {\n          this.isLoading.set(false);\n          this.snackBar.open('Ha ocurrido un error al registrarse.', 'Cerrar', {\n            duration: 3000,\n            panelClass: ['error-snackbar']\n          });\n        }\n      });\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}