{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nlet LoginFormComponent = class LoginFormComponent {\n  constructor(fb, authService, router, snackBar) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.switchToRegister = new EventEmitter();\n    this.isLoading = signal(false);\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.isLoading.set(true);\n      const {\n        email,\n        password\n      } = this.loginForm.value;\n      this.authService.login(email, password).subscribe({\n        next: success => {\n          this.isLoading.set(false);\n          if (success) {\n            this.snackBar.open('¡Bienvenido! Has iniciado sesión correctamente.', 'Cerrar', {\n              duration: 3000,\n              panelClass: ['success-snackbar']\n            });\n            this.router.navigate(['/dashboard']);\n          } else {\n            this.snackBar.open('Credenciales incorrectas. Intenta con juan@email.com / 123456', 'Cerrar', {\n              duration: 5000,\n              panelClass: ['error-snackbar']\n            });\n          }\n        },\n        error: () => {\n          this.isLoading.set(false);\n          this.snackBar.open('Ha ocurrido un error al iniciar sesión.', 'Cerrar', {\n            duration: 3000,\n            panelClass: ['error-snackbar']\n          });\n        }\n      });\n    }\n  }\n};\n__decorate([Output()], LoginFormComponent.prototype, \"switchToRegister\", void 0);\nLoginFormComponent = __decorate([Component({\n  selector: 'app-login-form',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, MatCardModule, MatFormFieldModule, MatInputModule, MatButtonModule, MatSnackBarModule],\n  template: `\n    <mat-card class=\"blue-theme\">\n      <mat-card-header class=\"text-center mb-4\">\n        <mat-card-title style=\"color: #1976d2; font-size: 24px; font-weight: bold;\">\n          Iniciar Sesión\n        </mat-card-title>\n        <mat-card-subtitle style=\"color: #666; text-align: center;\">\n          Ingresa tus credenciales para acceder\n        </mat-card-subtitle>\n      </mat-card-header>\n      \n      <mat-card-content>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"flex flex-column gap-4\">\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Email</mat-label>\n            <input matInput type=\"email\" formControlName=\"email\" placeholder=\"tu@email.com\">\n            @if (loginForm.get('email')?.invalid && loginForm.get('email')?.touched) {\n              <mat-error>\n                @if (loginForm.get('email')?.errors?.['required']) {\n                  El email es requerido\n                }\n                @if (loginForm.get('email')?.errors?.['email']) {\n                  Email inválido\n                }\n              </mat-error>\n            }\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Contraseña</mat-label>\n            <input matInput type=\"password\" formControlName=\"password\" placeholder=\"••••••••\">\n            @if (loginForm.get('password')?.invalid && loginForm.get('password')?.touched) {\n              <mat-error>\n                @if (loginForm.get('password')?.errors?.['required']) {\n                  La contraseña es requerida\n                }\n                @if (loginForm.get('password')?.errors?.['minlength']) {\n                  La contraseña debe tener al menos 6 caracteres\n                }\n              </mat-error>\n            }\n          </mat-form-field>\n\n          <button \n            mat-raised-button \n            color=\"primary\" \n            type=\"submit\" \n            class=\"full-width\"\n            [disabled]=\"isLoading() || loginForm.invalid\"\n          >\n            {{ isLoading() ? 'Iniciando...' : 'Iniciar Sesión' }}\n          </button>\n        </form>\n\n        <div class=\"text-center mt-4\">\n          <p style=\"color: #666; font-size: 14px;\">\n            ¿No tienes cuenta?\n            <button \n              mat-button \n              color=\"primary\" \n              (click)=\"switchToRegister.emit()\"\n              style=\"text-decoration: none; font-weight: 500;\"\n            >\n              Regístrate aquí\n            </button>\n          </p>\n        </div>\n\n        <div class=\"mt-4 p-4\" style=\"background-color: #f0f8ff; border-radius: 8px;\">\n          <p style=\"color: #1976d2; font-size: 12px; margin: 0;\">\n            <strong>Demo:</strong> juan@email.com / 123456\n          </p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  `,\n  styles: [`\n    mat-card {\n      max-width: 400px;\n      margin: 0 auto;\n    }\n    \n    mat-card-header {\n      justify-content: center;\n      padding-bottom: 16px;\n    }\n  `]\n})], LoginFormComponent);\nexport { LoginFormComponent };","map":{"version":3,"names":["Component","EventEmitter","Output","signal","CommonModule","Validators","ReactiveFormsModule","MatCardModule","MatFormFieldModule","MatInputModule","MatButtonModule","MatSnackBarModule","LoginFormComponent","constructor","fb","authService","router","snackBar","switchToRegister","isLoading","loginForm","group","email","required","password","minLength","onSubmit","valid","set","value","login","subscribe","next","success","open","duration","panelClass","navigate","error","__decorate","selector","standalone","imports","template","styles"],"sources":["/home/project/src/app/pages/auth/login-form/login-form.component.ts"],"sourcesContent":["import { Component, EventEmitter, Output, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-login-form',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSnackBarModule\n  ],\n  template: `\n    <mat-card class=\"blue-theme\">\n      <mat-card-header class=\"text-center mb-4\">\n        <mat-card-title style=\"color: #1976d2; font-size: 24px; font-weight: bold;\">\n          Iniciar Sesión\n        </mat-card-title>\n        <mat-card-subtitle style=\"color: #666; text-align: center;\">\n          Ingresa tus credenciales para acceder\n        </mat-card-subtitle>\n      </mat-card-header>\n      \n      <mat-card-content>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"flex flex-column gap-4\">\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Email</mat-label>\n            <input matInput type=\"email\" formControlName=\"email\" placeholder=\"tu@email.com\">\n            @if (loginForm.get('email')?.invalid && loginForm.get('email')?.touched) {\n              <mat-error>\n                @if (loginForm.get('email')?.errors?.['required']) {\n                  El email es requerido\n                }\n                @if (loginForm.get('email')?.errors?.['email']) {\n                  Email inválido\n                }\n              </mat-error>\n            }\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Contraseña</mat-label>\n            <input matInput type=\"password\" formControlName=\"password\" placeholder=\"••••••••\">\n            @if (loginForm.get('password')?.invalid && loginForm.get('password')?.touched) {\n              <mat-error>\n                @if (loginForm.get('password')?.errors?.['required']) {\n                  La contraseña es requerida\n                }\n                @if (loginForm.get('password')?.errors?.['minlength']) {\n                  La contraseña debe tener al menos 6 caracteres\n                }\n              </mat-error>\n            }\n          </mat-form-field>\n\n          <button \n            mat-raised-button \n            color=\"primary\" \n            type=\"submit\" \n            class=\"full-width\"\n            [disabled]=\"isLoading() || loginForm.invalid\"\n          >\n            {{ isLoading() ? 'Iniciando...' : 'Iniciar Sesión' }}\n          </button>\n        </form>\n\n        <div class=\"text-center mt-4\">\n          <p style=\"color: #666; font-size: 14px;\">\n            ¿No tienes cuenta?\n            <button \n              mat-button \n              color=\"primary\" \n              (click)=\"switchToRegister.emit()\"\n              style=\"text-decoration: none; font-weight: 500;\"\n            >\n              Regístrate aquí\n            </button>\n          </p>\n        </div>\n\n        <div class=\"mt-4 p-4\" style=\"background-color: #f0f8ff; border-radius: 8px;\">\n          <p style=\"color: #1976d2; font-size: 12px; margin: 0;\">\n            <strong>Demo:</strong> juan@email.com / 123456\n          </p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  `,\n  styles: [`\n    mat-card {\n      max-width: 400px;\n      margin: 0 auto;\n    }\n    \n    mat-card-header {\n      justify-content: center;\n      padding-bottom: 16px;\n    }\n  `]\n})\nexport class LoginFormComponent {\n  @Output() switchToRegister = new EventEmitter<void>();\n  \n  loginForm: FormGroup;\n  isLoading = signal(false);\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.isLoading.set(true);\n      const { email, password } = this.loginForm.value;\n      \n      this.authService.login(email, password).subscribe({\n        next: (success) => {\n          this.isLoading.set(false);\n          if (success) {\n            this.snackBar.open('¡Bienvenido! Has iniciado sesión correctamente.', 'Cerrar', {\n              duration: 3000,\n              panelClass: ['success-snackbar']\n            });\n            this.router.navigate(['/dashboard']);\n          } else {\n            this.snackBar.open('Credenciales incorrectas. Intenta con juan@email.com / 123456', 'Cerrar', {\n              duration: 5000,\n              panelClass: ['error-snackbar']\n            });\n          }\n        },\n        error: () => {\n          this.isLoading.set(false);\n          this.snackBar.open('Ha ocurrido un error al iniciar sesión.', 'Cerrar', {\n            duration: 3000,\n            panelClass: ['error-snackbar']\n          });\n        }\n      });\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}